{
  "nio/MergeStreams": {
    "Miscellaneous": {
      "Persistence": "Persist signals only when no expiration (ttl) is configured.\nSignals at each input will be persisted between block restarts except when an expiration is configured. TODO: Improve this feature so signals are always persisted and then properly removed after loaded and the expiration has passed."
    },
    "Output": "A new signal that is the merged version of one signal from input 1 and one signal from input 2.\n- example (with no expiration and notify once is True)\n- signal A enters input 1\n- signal B enters input 2 - notify AB\n- signal C enters input 1\n- signal D enters input 1\n- signal E enters input 2 - notify DE\n- example (with no expiration and notify once is False)\n- signal A enters input 1\n- signal B enters input 2 - notify AB\n- signal C enters input 1 - notify CB\n- signal D enters input 1 - notify DB\n- signal E enters input 2 - notify DE\n- example (with expiration and notify once is True)\n- signal A enters input 1\n- signal A expires\n- signal B enters input 2\n- signal C enters input 1 - notify CB\n- signal D enters input 1\n- signal E enters input 2 - notify DE\n- example (with expiration and notify once is False)\n- signal A enters input 1\n- signal A expires\n- signal B enters input 2\n- signal C enters input 1 - notify CB\n- signal D enters input 1 - notify DB\n- signal E enters input 2 - notify DE\nIf the signals from input_1 and input_2 share an attribute, the merged signal takes the value from input_2.",
    "Description": "Take two input streams and combine signals together",
    "Commands": {},
    "Category": "SignalModifier",
    "Dependencies": [
      "None"
    ],
    "Input": "Any list of signals to either input.",
    "Properties": {
      "notify_once": {
        "description": "remove signal from block after it is notified",
        "type": "bool"
      },
      "group_by": {
        "description": "signals from the two inputs are merged by group",
        "type": "string"
      },
      "expiration": {
        "description": "length of time to store signal before dropping it",
        "type": "timedelta"
      }
    },
    "Version": "1.0.0"
  }
}
